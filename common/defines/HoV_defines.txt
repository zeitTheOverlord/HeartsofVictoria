NAI = {
	
	DIPLO_PLAY_SWAY_WARGOAL_MINIMUM_SWAYER_MULTIPLIER_INITIATOR = 1
	DIPLO_PLAY_SWAY_WARGOAL_MINIMUM_SWAYER_MULTIPLIER_TARGET = 1
	DIPLO_PLAY_SWAY_MINIMUM_OBLIGATION_VALUE = 50

	DIPLO_PLAY_ADD_WARGOAL_THRESHOLD = 5
	CHANGE_LAW_POLITICAL_MOVEMENT_RADICALISM_FACTOR = 3
	
	#peace ai
	AI_PEACE_AGREEMENT_BASE_VALUE = 0	# Was 0. See ~SHORT_WAR
	AI_PEACE_AGREEMENT_WHITE_PEACE_BASE = 50	# Was 10. See ~
	AI_PEACE_AGREEMENT_WHITE_PEACE_WAR_DURATION = 3	# For each month the war goes on add this to the acceptance for a white peace
	AI_PEACE_AGREEMENT_WAR_SUPPORT_FACTOR = -0.5	#  
	AI_PEACE_AGREEMENT_ALLY_WARGOAL_FACTOR = 20	# Was 10
	AI_PEACE_AGREEMENT_SELF_WARGOAL_FACTOR = 50	# Was 30, bilateral peace was a cool mechanic, but setting this at 30 basically crippled the idea
	AI_PEACE_AGREEMENT_ENEMY_WARGOAL_SELF_FACTOR = -50	# Was -50
	AI_PEACE_AGREEMENT_ENEMY_WARGOAL_ALLY_FACTOR = -20	# Was -10
	AI_PEACE_AGREEMENT_PEACE_DESIRE_FACTOR = 1	# Was 1.0. Not touching this, would be nice if this were dynamic and decreases over time to simulate WW1
	
	AI_MONTHS_OF_REDUCED_PEACE_DESIRE = 3	# Before this amount of months, reduce AI peace desire
	AI_CAPITULATE_PEACE_DESIRE_FACTOR	= 1	# Peace desire is multiplied by this when added to capitulation score
	AI_PEACE_DESIRE_FROM_SHORT_WAR = -100	# Subtract this amount of peace desire for the above number of months (multiplied by AI_MONTHS_OF_REDUCED_PEACE_DESIRE - months of war duration)
	
	AI_PEACE_DESIRE_FROM_TURMOIL = 100	# Add this amount of peace desire at 100% radicals
	AI_PEACE_DESIRE_FROM_DEVASTATION = 100	# Add this amount of peace desire at 100% devastation
	AI_PEACE_DESIRE_FROM_LOYALISTS = -100	# Subtract this amount of peace desire at 100% loyalists
	AI_PEACE_DESIRE_FROM_DEBT_LEVEL = 100	# Add this amount of peace desire at 100% debt level
	AI_PEACE_DESIRE_FROM_BANKRUPTCY = 100	# Add this amount of peace desire when bankrupt
	AI_PEACE_DESIRE_FROM_GOLD_RESERVES = -5	# Subtract this amount of peace desire at 100% gold reserves
	AI_PEACE_DESIRE_FROM_FORCE_BALANCE = 25	# Up to this amount is added or subtracted from war support based on DIPLO_PLAY_FORCE_BALANCE_SCALE of the two sides
}

NEconomy = {
	ECONOMY_OF_SCALE_START_LEVEL = 1 # Level at which buildings start getting economy of scale bonuses. Levels lower than this value provide no bonus [>=1]
	
	MIN_CONSTRUCTION_EFFICIENCY = 0.1	#0.05				# Construction efficiency cannot go below this amount
	MIN_GOODS_PRICE = 0.0001	# A good cannot have a lower base price than this                                                                                                      
	EXPENSIVE_GOODS_THRESHOLD = 1.5	# Used for some triggers and gui functions
	CHEAP_GOODS_THRESHOLD = 0.5	# Used for some triggers and gui functions
	PRICE_RANGE = 0.9999	# min price of a good is base * (1 - PRICE_RANGE), Max price is base * (1 + PRICE_RANGE), PRICE_RANGE is locked to [0-1]                                
	BUY_SELL_DIFF_AT_MAX_FACTOR = 3	# the difference between buy/consumption and sell/production at min/max pricing, e.g. if set to 4 then if buy orders are 4x sell orders price is maxed   
	GOODS_SHORTAGE_PENALTY_THRESHOLD = 0.01	# If supply / demand is lower than this, start applying output penalties, by default this should ( 1 / BUY_SELL_DIFF_AT_MAX_FACTOR )                     
	GOODS_SHORTAGE_PENALTY_DECREASE_SPEED = 0.01	# Goods shortage penalty updates by this amount towards target each day                                                                                  
	GOODS_SHORTAGE_PENALTY_MAX = 1	# Goods shortage penalty can't be higher than this                                                                                                       
	COUNTRY_MIN_CREDIT_BASE = 0.0001	# Added to the total Building Cash Reserves to determine credit limit (base)	                                                                         
	COUNTRY_MIN_CREDIT_SCALED = 0.0001	# Added to the total Building Cash Reserves to determine credit limit (multiplied by GDP)	                                                             
	GOLD_RESERVE_MIN = 1000	# If Gold Reserves are computed to be lower than this, it's instead set to this                                                                          
	GOLD_RESERVE_LIMIT_FACTOR = 1	# The base factor of annual GDP that should be provided as a Gold Reserve                                                                                
	GOLD_RESERVE_RETURNS_FACTOR = 0.1	# How rapidly diminishing returns will cause gold reserves to drop off after the limit has been reached (higher value increases penalty)                 
	DOWNSIZE_BUILDING_POP_TYPE_RADICALIZATION_SHARED_FACTOR = 0.03	# This percentage of a pop becomes radicalized when a building they would have ownership shares in is downsized in the state (multiplied by per-pop shares)
	FIRED_POP_RADICALIZATION_BASE_FRACTION = 0.05	#0.2		# This percentage of a pop becomes radicalized when they lose their job, for instance due to a building being downsized
	FIRED_POP_RADICALIZATION_SHARES_FACTOR = 0.01	#0.05	# Additional percentage of pop that becomes radicalized they lost their job for each per-pop share they had in the building
	SHIPPING_LANE_CONVOY_COST_SCALING = 0.25	#0.1		# The cost for a shipping lane for each node beyond the first. So at 0.1 it goes 1.0, 1.1, 1.2 and so on.
	SLAVE_BASKET_MAX = 10	#12						# Max level of consumer goods that a building will buy for its slaves (the lowest of this and SLAVE_BASKET_SCALED_MAX is used)
	SLAVE_TRADE_SLAVES_PER_WEEK = 1000	#100	# Base number of slaves that will be traded per marker per week
}

NPolitics = {
	REVOLUTION_MAX_STATE_FRACTION = 0.33
	MIN_RADICALISM_FOR_REVOLUTION_PROGRESSION = 66
	MAX_PROGRESS_FOR_UNSUPPORTED_REVOLUTIONS = 0.3
	REVOLUTIONS_PROGRESS_DECAY = 0.03
}

NMilitary = {
	MANPOWER_LOST_DUE_TO_ATTRITION_PER_WEEK_MIN = 0.02	# The minimum percentage of manpower a unit can lose each week due to attrition
	MANPOWER_LOST_DUE_TO_ATTRITION_PER_WEEK_MAX = 0.2	# The maximum percentage of manpower a unit can lose each week due to attrition
	BATTLE_PLAN_ADVANCE_PROGRESS_TO_LAUNCH = 200	# required accumulated advance progress to launch
}
NCharacters = {
	OLD_AGE = 50
	MAX_TRAITS_SKILL = 5	# The max amount of Skill Traits a character can develop normally (note: not adhered to by add_trait effect)
	MAX_TRAITS_CONDITION = 3	# The max amount of Condition Traits a character can develop normally (note: not adhered to by add_trait effect)
	CHARACTER_LIFE_EXPECTANCY_BASE_YEARS = 65
}

NDiplomacy = {
	MIN_WAR_SUPPORT = -100
	MAX_WAR_SUPPORT = 100
	BASE_WAR_SUPPORT = 100
		#infamy
	WAR_GOAL_INFAMY_POPULATION_SCALING_FACTOR = 10000 # The amount of population by which the factor below is multiplied
	WAR_GOAL_INFAMY_POPULATION_SCALING_MULTIPLIER = 0.03 # For each WAR_GOAL_INFAMY_POPULATION_SCALING_FACTOR population in a country/state, multiply infamy by this
	WAR_GOAL_INFAMY_POPULATION_SCALING_MULTIPLIER_MAX_PER_STATE = 5 # Infamy population multiplier can't be higher than this for each state affected
	WAR_GOAL_INFAMY_POPULATION_SCALING_MULTIPLIER_MAX_TOTAL = 75 # Infamy population multiplier can't be higher than this, regardless of number of states affected
	WAR_GOAL_INFAMY_HOMELAND_FACTOR = -0.25 # Infamy is adjusted by this if the states taken/puppeted etc are Homelands of the aggressor
	WAR_GOAL_INFAMY_UNINCORPORATED_FACTOR = -0.5 # Infamy is adjusted by this if the states taken/puppeted etc are unincorporated
	WAR_GOAL_INFAMY_OWN_SUBJECT_MULT = 0.25 # Infamy is multiplied by this for wargoals targeting your own subject
	WAR_GOAL_INFAMY_RELATIONS_TARGET_IMPACT = -1 # Each point of infamy generated by an incident also has this impact on relations with the target
	WAR_GOAL_INFAMY_RELATIONS_INTEREST_IMPACT = -0.5 # Each point of infamy generated by an incident also has this impact on relations with countries that have an interest in the target 
	#	%50 artış 
	WAR_GOAL_INFAMY_CONQUER_STATE = 7.5 #5.0
	WAR_GOAL_INFAMY_RETURN_STATE = 3.0 #2.0
	WAR_GOAL_INFAMY_TAKE_TREATY_PORT = 3.0 #2.0
	WAR_GOAL_INFAMY_MAKE_PUPPET = 4.5 #3.0
	WAR_GOAL_INFAMY_MAKE_VASSAL = 4.5 #3.0
	WAR_GOAL_INFAMY_MAKE_DOMINION = 3.0 #2.0
	WAR_GOAL_INFAMY_TRANSFER_SUBJECT = 3.0 #2.0
	WAR_GOAL_INFAMY_ANNEX_COUNTRY = 7.5 #5.0
	WAR_GOAL_INFAMY_UNIFICATION = 3.0 #2.0
	WAR_GOAL_INFAMY_REGIME_CHANGE = 1.0 #0.5
	#	%50 artış 
	WAR_GOAL_INFAMY_DIPLO_PLAY_BACK_DOWN_REFUND = -0.75 # Refund of infamy for war goals that are dropped due to one side backing down in a diplo play (applied to initiator/target)
	WAR_GOAL_INFAMY_DIPLO_PLAY_BACKER_REFUND = -1.00 	# Refund of infamy for war goals that are dropped for backers in a diplo play (due to play not escalating to war or backer switching sides)
	WAR_GOAL_INFAMY_PEACE_REFUND = -0.25 				# Refund of infamy for war goals that are dropped due to a country capitulating or negotating peace without enforcing their wargoal
	WAR_GOAL_INFAMY_REDUCTION_FOR_TARGET = -0.25 		# This much of a war goal's infamy value is removed from the target when target has it enforced on them
	#infamy
}

NWar = {
	DEVASTATION_INCREASE_RATE = 0.09	# Per day, scales with level of occupation
	DEVASTATION_DECAY_RATE = -0.15	# Per day, when there are no occupations
	DEVASTATION_FROM_BATTLES = 0.08	# For each battle
	AUTO_CAPITULATE_WAR_SUPPORT = -100	#-100 # When war support is this low, the country will auto capitulate
	DAYS_BETWEEN_WAR_EXHAUSTION = 14	# Every this many days war support will be reduced by the war exhaustion formula
	WAR_EXHAUSTION_BASE = 0.1
	WAR_EXHAUSTION_KIA_FACTOR = 20	# Scaled by casualties compared to total manpower
	WAR_EXHAUSTION_KIA_BASE_MULTIPLIER = 0.05	#was 0.1  # War Exhaustion from casualties is always multiplied by at least this
	WAR_EXHAUSTION_KIA_BATTLES_LOST_MULTIPLIER = 0	#was 0.25	# At 100% of battles lost by our side, War Exhaustion from casualties is further multiplied by this
	WAR_EXHAUSTION_CONTESTED_ENEMY_WARGOALS = 1	#was 1 

	OCCUPATION_STATE_INCORPORATED_WEIGHT = 1
}

NPops = {
	ASSIMILATION_RATE = 0.004
	MIGRATION_PULL_EMPTY_STATE = 100	# If a state has no pops at all, give it a huge migration pull
	MIGRATION_PULL_FROM_LIVING_STANDARD = 1	# Migration pull from each point of average living standard in target state	
	MIGRATION_PULL_FROM_AVAILABLE_EMPLOYMENT = 1	# Migration pull is increased by for each 10k available non subsistence jobs
	MIGRATION_PULL_FROM_AVAILABLE_EMPLOYMENT_MAX = 10	# Migration pull from available non subsistence jobs cannot exceed this
	MIGRATION_PULL_FROM_AVAILABLE_ARABLE_LAND_MAX_EMPLOYMENT_MULTIPLIER = 0.75	# Count available arable land as though the subsistence farm has only this fraction of its max employment, so that massive states in China with mostly full subsistence farms don't get a huge migration boost
	MIGRATION_PULL_FROM_AVAILABLE_ARABLE_LAND = 0.025	# Migration pull is increased by for each 10k available subsistence jobs
	MIGRATION_PULL_FROM_AVAILABLE_ARABLE_LAND_MAX = 10	# Migration pull from available subsistence jobs cannot exceed this
	MIGRATION_PULL_REDUCTION_FROM_UNEMPLOYMENT = 1	# Migration pull is reduced by this for each 10k unemployed pops
	MIGRATION_PULL_REDUCTION_FROM_UNEMPLOYMENT_MAX = 10	# Migration pull reduction from unemployment cannot exceed this
	# The below factors are applied *after* migration pull threshold checks, so they only impact how large a share of migration a state gets
	MIGRATION_PULL_MULT_FROM_CULTURE_TARGET = 20	# Migration pull multiplied by this from target state being a cultural migration target
	MIGRATION_PULL_MULT_FROM_CULTURE_TARGET_ADJACENCY = 3	# Migration pull multiplied by this from target state being next to a cultural migration target
	MIGRATION_PULL_MULT_FROM_NO_DISCRIMINATION = 0.25	# Migration pull multiplier increased by this if pop is moving from discrimination to no discrimination (not applied to mass migration targets)
	MIGRATION_PULL_MULT_FROM_HOMELANDS = 0.25	# Migration pull  multiplier increased by this if pop is moving to cultural homelands (not applied to mass migration targets)
	# General factors for how many pops will migrate
	MIGRATION_PULL_HIGH_THRESHOLD = 1.1	#	State must have a migration pull of at least market average * this to get economic immigration
	MIGRATION_PULL_LOW_THRESHOLD = 0.4	# State must have a migration pull of less or equal than market average * this to get full amount of emigration
	ECONOMIC_MIGRATION_BASE = 0.02	# Base amount of a pop that wants to move for economic reasons
	ECONOMIC_MIGRATION_FROM_SOL_DIFFERENCE = 0	# Each point of difference of pop SoL to the market's average SoL makes this fraction of the pop want to economically migrate (in %)
	ECONOMIC_MIGRATION_STATE_POPULATION_THRESHOLD = 250000	# States with less pops than this have reduced economic emigration numbers to avoid total depopulation
	CULTURAL_MIGRATION_BASE = 0.05	# Base amount of a pop that wants to move due to mass migration
	CULTURAL_MIGRATION_FROM_RADICALS = 0.05	# At 100% radicals, this fraction of the pop wants to mass migrate
	MIGRATION_UNEMPLOYMENT_MULT = 2	# Amount of migration from SoL is increased by this when a pop is unemployed
	MIGRATION_MIN_STATE_POPS = 100000	# A state with less pops than this will not get emigration
	MIGRATION_MIN_POP_AMOUNT = 1	# No less than this amount of a pop can migrate each week (if any migration at all should happen)
	MIGRATION_MAX_POP_AMOUNT = 5000	# No more than this amount of a pop can migrate each week
	MASS_MIGRATION_ORIGIN_MIN_TURMOIL = 0.15	# Must have at least this much turmoil in cultural homelands to create a migration target
	MASS_MIGRATION_ORIGIN_MIN_EMIGRANTS = 50000	# A country must have at least this many possible migrants to trigger a mass migration
	MASS_MIGRATION_TARGET_MAX_TURMOIL = 0.35	# Must have this or less turmoil among the culture for a country to be picked as a mass migration target
	MASS_MIGRATION_TARGET_MIN_PULL = 40	# A state/country must have at least this in migration pull to be picked as a mass migration target
	MASS_MIGRATION_TARGET_MIN_ARABLE_LAND = 100	# A state must have at least this much arable land to be a mass migration target
	MASS_MIGRATION_STATE_MIN_MARKET_ACCESS = 0.7	# A state must have at least this much market access to their market to be a mass migration target or origin state
	MASS_MIGRATION_SPAWN_CHANCE = 2	# Per week for each potential mass migration, scales with turmoil (1 = 1%)
	MASS_MIGRATION_SPAWN_CHANCE_STRUGGLING_FACTOR = 0.1	# Chance increases by this for each point of SoL below 10 for a culture in a country
	MASS_MIGRATION_SPAWN_CHANCE_STARVING_FACTOR = 0.5	# Chance increases by this for each point of SoL below 5 for a culture in a country (added on top of struggling factor)
	MASS_MIGRATION_TARGET_COUNTRY_RANDOM_FACTOR = 0.2	# The higher this is, the more random the selection of mass migration country targets will be
	MASS_MIGRATION_TARGET_STATE_RANDOM_FACTOR = 0.5	# The higher this is, the more random the selection of mass migration state targets in the target country will be
	MASS_MIGRATION_DURATION_MONTHS = 12	# How long does a mass migration last in months
	MASS_MIGRATION_COOLDOWN_MONTHS = 24	# How many months before the same culture can mass migrate from a country again
	MASS_MIGRATION_NUM_TARGET_STATES_FOR_NO_PENALTY = 5	# Countries with at least this number of possible target states do not receive any penalty to their mass migration target score
	MASS_MIGRATION_FEW_TARGET_STATES_PENALTY = 0.25	# Mass migration target score is divided by ( 1 + this * number of possible target states less than MASS_MIGRATION_NUM_TARGET_STATES_FOR_NO_PENALTY )
	COLONIZATION_RIGHTS_GROWTH_MULTIPLIER = 2	# Colonial growth AND max colonial growth are multiplied by this if you have colonization rights
	COLONIAL_GROWTH_BASE_FACTOR = 0.00001	# Colonial growth generated by a state is ( total pops / 1000 ) * this * modifier from institution
	MIN_BASE_COLONIAL_GROWTH = 0.05	# Country base colonial growth from population cannot be lower than this
	MAX_BASE_COLONIAL_GROWTH = 0.1	# Country base colonial growth from population cannot be higher than this
	MAX_COLONIAL_GROWTH = 0.03	# Colonies can grow by this much at most per day 
	WORKING_ADULT_RATIO_BASE = 0.33		# Base ratio of working adults to dependents, this can be overridden by pop type definition and country modifiers.
}
NTechnology = {
	TECH_AHEAD_OF_TIME_PENALTY_FACTOR = 0.3 # For every tech in a previous era not already researched in this category, take this multiple of the cost as an additional penalty (multiplied by number of eras between the techs)
	TECH_SPREAD_RANDOM_RANGE = 	0.5 # How much can distribution of tech spread vary each week
}