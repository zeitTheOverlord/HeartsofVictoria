NAI = {
	GOVERNMENT_MONEY_SPENDING_ENABLED = no	# If this is set to no, the AI for government money spending will be disabled
	# GOVERNMENT_AUTHORITY_SPENDING_ENABLED = no  # If this is set to no, the AI for authority spending will be disabled
	TAX_LEVEL_CHANGES_ENABLED = no	# If this is set to no, the AI will not change its tax levels (but might still use consumption taxes if GOVERNMENT_AUTHORITY_SPENDING_ENABLED = yes)
	PRODUCTION_BUILDING_CONSTRUCTION_ENABLED = no	# If this is set to no, the country-level AI will not construct any production buildings
	# AUTONOMOUS_INVESTMENT_CONSTRUCTION_ENABLED = no # If this is set to no, the autonomous investment AI won't construct anything even if the game rule for it is enabled
	CONSTRUCTION_DEBT_RESUME = 6.66	# If constructions are paused, resume once debt is this low relative to ceiling
	CONSTRUCTION_DEBT_PAUSE = 7.77	# If in this much relative debt to debt ceiling, pause all non-critical constructions 	
	CONSTRUCTION_DEBT_RESUME_CRITICAL_CONSTRUCTION = 6.66	# If critical constructions are paused, resume once debt is this low relative to ceiling
	CONSTRUCTION_DEBT_PAUSE_CRITICAL_CONSTRUCTION = 7.77	# If in this much relative debt to debt ceiling, pause all critical constructions 	
	# Below data is used to calculate how much weight the AI places on promoting an IG
	PROMOTION_BASE_VALUE = 0
	# Below data is used to calculate how much weight the AI places on suppressing an IG
	SUPPRESSION_BASE_VALUE = 0
	# Below data is used to calculate how much weight the AI places on consumption taxes 
	#CONSUMPTION_TAX_INCOME_VALUE = 10 # Per percent of state expenses in taxable value (this is then multiplied by relative authority cost of the good)
	#CONSUMPTION_TAX_STAPLE_MULT = 0.5 # Multiply desire to tax staple goods by this
	#CONSUMPTION_TAX_LUXURY_MULT = 2.0 # Multiply desire to tax luxury goods by this
	CONSUMPTION_TAX_LOW_INCOME_THRESHOLD = 3	# Income-to-expenses threshold below which consumption taxes are a must-have
	CONSUMPTION_TAX_HIGH_INCOME_THRESHOLD = 5	# Income-to-expenses threshold at which consumption taxes should be removed (if removal would not put us below this)
	CONSUMPTION_TAX_MAX_NUM_TAXED_GOODS_BASE = 6	# Base max number of goods AI wants to tax
	#CONSUMPTION_TAX_MAX_NUM_TAXED_GOODS_PER_MISSING_TAX_TYPE = 2 # Added to max number of goods AI wants to tax for each other type of tax it does not collect
}

NEconomy = {
	MIN_CONSTRUCTION_EFFICIENCY = 0.1	#0.05				# Construction efficiency cannot go below this amount
	MIN_GOODS_PRICE = 0.0001	# A good cannot have a lower base price than this                                                                                                      
	EXPENSIVE_GOODS_THRESHOLD = 1.5	# Used for some triggers and gui functions
	CHEAP_GOODS_THRESHOLD = 0.5	# Used for some triggers and gui functions
	PRICE_RANGE = 0.9999	# min price of a good is base * (1 - PRICE_RANGE), Max price is base * (1 + PRICE_RANGE), PRICE_RANGE is locked to [0-1]                                
	BUY_SELL_DIFF_AT_MAX_FACTOR = 3	# the difference between buy/consumption and sell/production at min/max pricing, e.g. if set to 4 then if buy orders are 4x sell orders price is maxed   
	GOODS_SHORTAGE_PENALTY_THRESHOLD = 0.01	# If supply / demand is lower than this, start applying output penalties, by default this should ( 1 / BUY_SELL_DIFF_AT_MAX_FACTOR )                     
	GOODS_SHORTAGE_PENALTY_DECREASE_SPEED = 0.01	# Goods shortage penalty updates by this amount towards target each day                                                                                  
	GOODS_SHORTAGE_PENALTY_MAX = 1	# Goods shortage penalty can't be higher than this                                                                                                       
	MINIMUM_WAGE_RATE = 0.01	# The wage rate can never drop below this, no matter what (weekly £ per POP_SIZE_PACKAGE employees)                                                      
	BUILDING_INITIAL_WAGE_WEEKS = 1	# A building will not adjust its wages for the first this many weeks of its existence                                                                    
	MAX_WAGE_STEP_CHANGE = 1	# Wage rates can change at most this much each week                                                                                                      
	COUNTRY_MIN_CREDIT_BASE = 0.0001	# Added to the total Building Cash Reserves to determine credit limit (base)	                                                                         
	COUNTRY_MIN_CREDIT_SCALED = 0.0001	# Added to the total Building Cash Reserves to determine credit limit (multiplied by GDP)	                                                             
	GOLD_RESERVE_MIN = 1000	# If Gold Reserves are computed to be lower than this, it's instead set to this                                                                          
	GOLD_RESERVE_LIMIT_FACTOR = 1	# The base factor of annual GDP that should be provided as a Gold Reserve                                                                                
	GOLD_RESERVE_RETURNS_FACTOR = 0.1	# How rapidly diminishing returns will cause gold reserves to drop off after the limit has been reached (higher value increases penalty)                 
	SUBSISTENCE_OUTPUT_AVERAGE_WAGE_RATE_FACTOR = 1	# Each 1.0 of subsistence output counts as this much wage rate when setting normal wages                                                                
	MIN_RAISE_TO_HIRE = 0.05	#0.10						# The minimum required increase in wages for an employee to switch jobs (1.0 = +100% = x2)							
	DOWNSIZE_BUILDING_POP_TYPE_RADICALIZATION_SHARED_FACTOR = 0.03	# This percentage of a pop becomes radicalized when a building they would have ownership shares in is downsized in the state (multiplied by per-pop shares)
	FIRED_POP_RADICALIZATION_BASE_FRACTION = 0.05	#0.2		# This percentage of a pop becomes radicalized when they lose their job, for instance due to a building being downsized
	FIRED_POP_RADICALIZATION_SHARES_FACTOR = 0.01	#0.05	# Additional percentage of pop that becomes radicalized they lost their job for each per-pop share they had in the building
	SHIPPING_LANE_CONVOY_COST_SCALING = 0.25	#0.1		# The cost for a shipping lane for each node beyond the first. So at 0.1 it goes 1.0, 1.1, 1.2 and so on.
	SLAVE_BASKET_MAX = 10	#12						# Max level of consumer goods that a building will buy for its slaves (the lowest of this and SLAVE_BASKET_SCALED_MAX is used)
	SLAVE_TRADE_SLAVES_PER_WEEK = 1000	#100	# Base number of slaves that will be traded per marker per week
}
