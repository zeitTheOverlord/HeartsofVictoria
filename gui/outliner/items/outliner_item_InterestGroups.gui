types pinnable_outliner_items {

	type interest_group_item = pinnable_outliner_entry {
		datacontext = "[OutlinerEntry.AccessScope.AccessInterestGroup]"

		tooltipwidget = {
			FancyTooltip_IG = {}
		}

		# Override the entire item so we can make it responsive using an hbox
		blockoverride "widget" {
			hbox = {
				margin_left = 15
				margin_right = 10
				maximumsize = { 480 -1 }
				layoutpolicy_horizontal = expanding

				flowcontainer = {
					spacing = 5
					margin_right = 5
					ig_icon = {
						blockoverride "in_government_icon" {}
						size = { 25 25 }
					}
				}
				textbox = {
					block "expand_buttons_margin" {}
					align = left|nobaseline
					elide = right
					text = "[InterestGroup.GetNameNoFormatting]"
					fontsize_min = 10
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
				}
				character_portrait_mini = {
					#align = right|nobaseline
					datacontext = "[InterestGroup.AccessLeader]"
					size = { 30 24 }
					blockoverride "portrait_size" {
						size = { 30 28 }
					}
					layoutpolicy_horizontal = fixed
				}
				
				icon = {
					datacontext = "[InterestGroup.AccessLeader.GetIdeology]"
					texture = "[Ideology.GetTexture]"
					tooltipwidget = {
						FancyTooltip_Ideology = {}
					}
					size = { 22 22 }
					layoutpolicy_horizontal = fixed
				}
				block "margin1" {
					widget = {
						size = { 25 25 }						
					}
				}

				textbox = {
					autoresize = yes
					raw_text = "#variable [InterestGroup.GetApprovalValue|+=]#!"
					minimumsize = { 30 -1 }
					align = right|nobaseline
					tooltip = "IG_APPROVAL_BREAKDOWN"
					margin_right = 3
					#visible = "[Not(InterestGroup.IsMarginal)]"
					layoutpolicy_horizontal = fixed
				}

				fixedgridbox = {
					flipdirection = yes
					datamodel = "[InterestGroup.AccessTraits]"
					addcolumn = 19
					addrow = 23


					item = {
						widget = {
							size = { 19 23 }
							icon = {
								#visible = "[Not(InterestGroup.IsMarginal)]"
								parentanchor = center
								texture = "[InterestGroupTrait.GetTexture]"
								enabled = "[InterestGroupTrait.IsEnabled(InterestGroup.Self)]"
								using = tooltip_above
								size = { 17 23 }
								alpha = "[TransparentIfFalse(InterestGroupTrait.IsEnabled(InterestGroup.Self))]"
								
								tooltipwidget = {
									FancyTooltip_InterestGroupTrait = {
										blockoverride "icon" {
											icon = {
												texture = "[InterestGroupTrait.GetTexture]"
												enabled = "[InterestGroupTrait.IsEnabled(InterestGroup.Self)]"
												size = { 33 45 }
												parentanchor = center
											}
										}
									}
								}
							}
						}
					}
				}

				textbox = {
					autoresize = yes
					text = "[InterestGroup.GetClout|%1]"
					minimumsize = { 55 -1 }
					align = right|nobaseline
					using = clout_tooltip_with_graph
				}
				textbox = {
					autoresize = yes
					text = "[InterestGroup.GetPopulation|*0]"
					minimumsize = { 55 -1 }
					align = right|nobaseline
					using = clout_tooltip_with_graph
				}
				block "margin2" {
					widget = {
						size = { 15 25 }						
					}
				}
				
				block "party" {
					widget = {
						size = { 25 25 }						
						party_icon = {
							parentanchor = right				
							visible = "[InterestGroup.HasParty]"
							datacontext = "[InterestGroup.GetParty]"
							size = { 23 23 }
						}
					}
				}
				block "in_government" {
					widget = {
						size = { 25 25 }						
						icon = {
							visible = "[InterestGroup.IsInGovernment]"
							texture = "gfx/interface/icons/generic_icons/in_government_icon.dds"
							size = { 21 21 }
							tooltip = IN_GOVERNMENT_DESC
							parentanchor = right|vcenter
						}
					}
				}
			}
		}

		blockoverride "onclick" {
			onclick = "[InformationPanelBar.OpenInterestGroupPanel( InterestGroup.AccessSelf )]"
			onrightclick = "[RightClickMenuManager.ShowForIG(InterestGroup.AccessSelf)]"
		}
	}
}