types pinnable_outliner_items {
	type player_item = flowcontainer {
		flowcontainer = {
			visible = "[Or(Player.IsObserver, Not(Player.HasPlayable))]"
			spacing = 10

			icon_observer = {
				size = { 48 48 }
				widgetanchor = left|vcenter
				parentanchor = left|vcenter
			}

			flowcontainer = {
				direction = vertical
				widgetanchor = left|vcenter
				parentanchor = left|vcenter
				
				textbox = {
					text = "[Player.GetName]"
					align = left|nobaseline
					autoresize = yes
				}
				textbox = {
					visible = "[Player.HasPlayable]"
					text = "[Player.GetPlayedOrObservedCountry.GetNameNoFlag]"
					align = left|nobaseline
					autoresize = yes
				}
			}
		}

		flowcontainer = {
			spacing = 10
			visible = "[And(Not(Player.IsObserver), Player.HasPlayable)]"
			datacontext = "[Player.GetPlayedOrObservedCountry]"
			
			small_flag = {
				widgetanchor = left|vcenter
				parentanchor = left|vcenter
			}
			flowcontainer = {
				direction = vertical
				widgetanchor = left|vcenter
				parentanchor = left|vcenter
				textbox = {
					text = "[Country.GetNameNoFlag]"
					align = left|nobaseline
					autoresize = yes
				}
				textbox = {
					text = "[Country.GetPlayedByDesc]"
					align = left|nobaseline
					maximumsize = { 300 -1 }
					autoresize = yes
					fontsize_min = 14
					elide = right
				}
			}
		}
	}

	type outliner_players = pinnable_outliner_group {
		datacontext = "[Outliner.AccessCategory('players')]"

		blockoverride "entry_size" {
			size = { 485 30 }
		}

		blockoverride "expand_buttons_visibility" {
			# force show expand buttons
			visible = yes
		}

		blockoverride "list_properties" {
			datamodel = "[Outliner.AccessPlayers]"

			item = {
				player_item = {}
			}
		}
	}
}
